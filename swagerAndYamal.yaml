openapi: 3.0.0
info:
  title: JOBS API
  contact: {}
  version: '1.0'
servers:
- url: https://spring-green-salmon-boot.cyclic.app/api/v1
  variables: {}
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: user login
      operationId: userlogin
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/userloginrequest'
              - example:
                  email: bahe15@gmail.com
                  password: secret12
            example:
              email: bahe15@gmail.com
              password: secret12
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: user register
      operationId: userregister
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/userregisterrequest'
              - example:
                  name: baher
                  email: bahe20@gmail.com
                  password: secret12
            example:
              name: baher
              email: bahe20@gmail.com
              password: secret12
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreatejobRequest'
              - example:
                  company: Cyclic
                  position: front-end deveper
            example:
              company: Cyclic
              position: front-end deveper
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get All jobs
      operationId: GetAlljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - Jobs
      summary: Update job
      operationId: Deletejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeletejobRequest'
              - example:
                  company: randomC
                  position: front-end deveper
            example:
              company: randomC
              position: front-end deveper
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: NewRequest
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    userloginrequest:
      title: userloginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: bahe15@gmail.com
        password: secret12
    userregisterrequest:
      title: userregisterrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: baher
        email: bahe20@gmail.com
        password: secret12
    CreatejobRequest:
      title: CreatejobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Cyclic
        position: front-end deveper
    DeletejobRequest:
      title: DeletejobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: randomC
        position: front-end deveper
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:

- name: Auth
  description: ''
- name: Jobs
  description: ''